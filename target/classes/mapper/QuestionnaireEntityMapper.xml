<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aim.questionnaire.dao.QuestionnaireEntityMapper">
  <resultMap id="BaseResultMap" type="com.aim.questionnaire.dao.entity.QuestionnaireEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="project_id" jdbcType="VARCHAR" property="projectId" />
    <result column="question_name" jdbcType="VARCHAR" property="questionName" />
    <result column="data_id" jdbcType="VARCHAR" property="dataId" />
    <!--<result column="question_title" jdbcType="VARCHAR" property="questionTitle" />-->
    <result column="question_end_content" jdbcType="VARCHAR" property="questionEndContent" />
    <!--<result column="context" jdbcType="VARCHAR" property="context" />-->
    <result column="question_stop" jdbcType="VARCHAR" property="questionStop" />
    <result column="release_time" jdbcType="TIMESTAMP" property="releaseTime" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="answer_total" jdbcType="VARCHAR" property="answerTotal" />
    <result column="created_by" jdbcType="CHAR" property="createdBy" />
    <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate" />
    <result column="last_updated_by" jdbcType="CHAR" property="lastUpdatedBy" />
    <result column="last_update_date" jdbcType="TIMESTAMP" property="lastUpdateDate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.aim.questionnaire.dao.entity.QuestionnaireEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="question_content" jdbcType="LONGVARCHAR" property="questionContent" />
    <result column="question_title" jdbcType="LONGVARCHAR" property="questionTitle" />
    <result column="question" jdbcType="LONGVARCHAR" property="question" />
    <result column="context" jdbcType="LONGVARCHAR" property="context" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, project_id, question_name, question_content, data_id, question_title, question_end_content,
    question_stop, release_time, start_time, end_time, answer_total, created_by,
    creation_date, last_updated_by, last_update_date
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    question_content,question_title,question,context
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from questionnaire_info
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from questionnaire_info
    where id = #{id,jdbcType=VARCHAR}
    AND question_stop != '1'
  </delete>
  <insert id="insert" parameterType="com.aim.questionnaire.dao.entity.QuestionnaireEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into questionnaire_info (id, project_id, question_name,
      question_content, data_id, question_title,
      question_end_content, context, question_stop,
      release_time, start_time, end_time,
      answer_total, created_by, creation_date,
      last_updated_by, last_update_date, question
      )
    values (#{id,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR}, #{questionName,jdbcType=VARCHAR},
      #{questionContent,jdbcType=VARCHAR}, #{dataId,jdbcType=VARCHAR}, #{questionTitle,jdbcType=VARCHAR},
      #{questionEndContent,jdbcType=VARCHAR}, #{context,jdbcType=LONGVARCHAR}, #{questionStop,jdbcType=VARCHAR},
      #{releaseTime,jdbcType=TIMESTAMP}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP},
      #{answerTotal,jdbcType=VARCHAR}, #{createdBy,jdbcType=CHAR}, #{creationDate,jdbcType=TIMESTAMP},
      #{lastUpdatedBy,jdbcType=CHAR}, #{lastUpdateDate,jdbcType=TIMESTAMP}, #{question,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.aim.questionnaire.dao.entity.QuestionnaireEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into questionnaire_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="questionName != null">
        question_name,
      </if>
      <if test="questionContent != null">
        question_content,
      </if>
      <if test="dataId != null">
        data_id,
      </if>
      <if test="questionTitle != null">
        question_title,
      </if>
      <if test="questionEndContent != null">
        question_end_content,
      </if>
      <if test="context != null">
        context,
      </if>
      <if test="questionStop != null">
        question_stop,
      </if>
      <if test="releaseTime != null">
        release_time,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="answerTotal != null">
        answer_total,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="creationDate != null">
        creation_date,
      </if>
      <if test="lastUpdatedBy != null">
        last_updated_by,
      </if>
      <if test="lastUpdateDate != null">
        last_update_date,
      </if>
      <if test="question != null">
        question,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="questionName != null">
        #{questionName,jdbcType=VARCHAR},
      </if>
      <if test="questionContent != null">
        #{questionContent,jdbcType=VARCHAR},
      </if>
      <if test="dataId != null">
        #{dataId,jdbcType=VARCHAR},
      </if>
      <if test="questionTitle != null">
        #{questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="questionEndContent != null">
        #{questionEndContent,jdbcType=VARCHAR},
      </if>
      <if test="context != null">
        #{context,jdbcType=LONGVARCHAR},
      </if>
      <if test="questionStop != null">
        #{questionStop,jdbcType=VARCHAR},
      </if>
      <if test="releaseTime != null">
        #{releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="answerTotal != null">
        #{answerTotal,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=CHAR},
      </if>
      <if test="creationDate != null">
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedBy != null">
        #{lastUpdatedBy,jdbcType=CHAR},
      </if>
      <if test="lastUpdateDate != null">
        #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="question != null">
        #{question,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aim.questionnaire.dao.entity.QuestionnaireEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update questionnaire_info
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="questionName != null">
        question_name = #{questionName,jdbcType=VARCHAR},
      </if>
      <if test="questionContent != null">
        question_content = #{questionContent,jdbcType=VARCHAR},
      </if>
      <if test="dataId != null">
        data_id = #{dataId,jdbcType=VARCHAR},
      </if>
      <if test="questionTitle != null">
        question_title = #{questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="questionEndContent != null">
        question_end_content = #{questionEndContent,jdbcType=VARCHAR},
      </if>
      <if test="context != null">
        context = #{context,jdbcType=LONGVARCHAR},
      </if>
      <if test="questionStop != null">
        question_stop = #{questionStop,jdbcType=VARCHAR},
      </if>
      <if test="releaseTime != null">
        release_time = #{releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="answerTotal != null">
        answer_total = #{answerTotal,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=CHAR},
      </if>
      <if test="creationDate != null">
        creation_date = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedBy != null">
        last_updated_by = #{lastUpdatedBy,jdbcType=CHAR},
      </if>
      <if test="lastUpdateDate != null">
        last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="question != null">
        question = #{question,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.aim.questionnaire.dao.entity.QuestionnaireEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update questionnaire_info
    set project_id = #{projectId,jdbcType=VARCHAR},
      question_name = #{questionName,jdbcType=VARCHAR},
      question_content = #{questionContent,jdbcType=VARCHAR},
      data_id = #{dataId,jdbcType=VARCHAR},
      question_title = #{questionTitle,jdbcType=VARCHAR},
      question_end_content = #{questionEndContent,jdbcType=VARCHAR},
      context = #{context,jdbcType=LONGVARCHAR},
      question_stop = #{questionStop,jdbcType=VARCHAR},
      release_time = #{releaseTime,jdbcType=TIMESTAMP},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      answer_total = #{answerTotal,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=CHAR},
      creation_date = #{creationDate,jdbcType=TIMESTAMP},
      last_updated_by = #{lastUpdatedBy,jdbcType=CHAR},
      last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
      question = #{question,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aim.questionnaire.dao.entity.QuestionnaireEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update questionnaire_info
    set project_id = #{projectId,jdbcType=VARCHAR},
      question_name = #{questionName,jdbcType=VARCHAR},
      question_content = #{questionContent,jdbcType=VARCHAR},
      data_id = #{dataId,jdbcType=VARCHAR},
      question_title = #{questionTitle,jdbcType=VARCHAR},
      question_end_content = #{questionEndContent,jdbcType=VARCHAR},
      context = #{context,jdbcType=LONGVARCHAR},
      question_stop = #{questionStop,jdbcType=VARCHAR},
      release_time = #{releaseTime,jdbcType=TIMESTAMP},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      answer_total = #{answerTotal,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=CHAR},
      creation_date = #{creationDate,jdbcType=TIMESTAMP},
      last_updated_by = #{lastUpdatedBy,jdbcType=CHAR},
      last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <!--修改历史问卷表状态-->
  <update id="modifyHistoryQuestionnaireStatus">
    UPDATE questionnaire_info
    SET question_stop = '1'
    <if test="releaseTime != null">
      ,release_time = #{releaseTime,jdbcType=TIMESTAMP}
    </if>
    <if test="endTime != null">
      ,end_time = #{endTime,jdbcType=TIMESTAMP}
    </if>
    WHERE id = #{id,jdbcType=VARCHAR}
  </update>

  <!--根据项目id查询此项目下的问卷个数-->
  <select id="selectQuestionCountByProjectId" parameterType="java.lang.String" resultType="java.lang.Integer">
    SELECT count(1)
    FROM questionnaire_info
    WHERE project_id  = #{projectId,jdbcType=VARCHAR}
    AND question_stop != "0"
  </select>

  <!--根据项目id查询此项目下的问卷个数-->
  <select id="queryQuestHistoryCountByProjectId" parameterType="java.lang.String" resultType="java.lang.Integer">
    SELECT count(*)
    FROM questionnaire_info
    WHERE project_id  = #{projectId,jdbcType=VARCHAR}
    AND question_stop = "4"
  </select>

  <!--根据项目id查询此项目下的全部问卷-->
  <select id="queryQuestionListByProjectId" parameterType="java.lang.String" resultType="map">
    SELECT id,question_name as questionName,question_content as questionContent,question_stop as questionStop,creation_date as creationDate,end_time as endTime,data_id as dataId
    FROM questionnaire_info
    WHERE project_id = #{projectId,jdbcType=VARCHAR}
    AND question_stop != "4"
    AND question_stop != "0"
    ORDER BY creation_date DESC
  </select>

  <!--根据问卷id查询问卷概述信息-->
  <select id="queryQuestionnaireInfoById" resultType="java.util.Map">
    SELECT que.id,question_name as questionName,que.creation_date as creationDate,que.end_time as endTime,question_content as questionContent,project_name as projectName,que.data_id as dataId,dat.name as dataName
    FROM questionnaire_info que, project_info pro,data_dictionary_info dat
    WHERE que.id = #{id,jdbcType=VARCHAR}
    AND que.project_id = pro.id
    AND que.data_id = dat.id
  </select>

  <!--查询历史问卷/模糊搜索-->
  <select id="queryQuestionnaireList" resultType="java.util.Map">
    SELECT id,project_id as projectId,question_name as questionName, end_time as endTime
    FROM questionnaire_info que
    WHERE question_stop = "4"
    AND created_by = #{user,jdbcType=CHAR}
    <if test="questionName != null">
      AND question_name LIKE '%${questionName}%'
    </if>
  </select>

  <!--根据问卷id查询问卷的详细信息-->
  <select id="queryQuestionnaireById" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT question_name AS questionName,question_content AS questionContent,question AS questionList
    FROM questionnaire_info
    WHERE id = #{questionId,jdbcType=VARCHAR}
    <!--<if test="questionStop != null">-->
      <!--AND  question_stop = #{questionStop,jdbcType =VARCHAR}-->
    <!--</if>-->
  </select>

  <!--添加问卷-->
  <insert id="addQuestionnaire" parameterType="map">
    insert into questionnaire_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="projectId != null and projectId != ''">
        project_id,
      </if>
      <if test="questionName != null">
        question_name,
      </if>
      <if test="questionContent != null">
        question_content,
      </if>
      <if test="dataId != null and dataId !=''">
        data_id,
      </if>
      <if test="questionList != null">
        question,
      </if>
      <if test="questionTitle != null">
        question_title,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="creationDate != null">
        creation_date,
      </if>
      <if test="lastUpdatedBy != null">
        last_updated_by,
      </if>
      <if test="lastUpdateDate != null">
        last_update_date,
      </if>
      <if test="questionStop != null">
        question_stop,
      </if>
      answer_total
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null and projectId !=''">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="questionName != null">
        #{questionName,jdbcType=VARCHAR},
      </if>
      <if test="questionContent != null">
        #{questionContent,jdbcType=VARCHAR},
      </if>
      <if test="dataId != null and dataId !=''">
        #{dataId,jdbcType=VARCHAR},
      </if>
      <if test="questionList != null">
        #{questionList,jdbcType=VARCHAR},
      </if>
      <if test="questionTitle != null">
        #{questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=CHAR},
      </if>
      <if test="creationDate != null">
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedBy != null">
        #{lastUpdatedBy,jdbcType=CHAR},
      </if>
      <if test="lastUpdateDate != null">
        #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="questionStop != null">
        #{questionStop,jdbcType=TIMESTAMP},
      </if>
      "0"
    </trim>
  </insert>

  <!--根据问卷id修改问卷-->
  <update id="modifyQuestionnaireInfo" parameterType="map">
    UPDATE questionnaire_info
    <set>
      <if test="questionName != null">
        question_name = #{questionName,jdbcType=VARCHAR},
      </if>
      <if test="questionContent != null">
        question_content = #{questionContent,jdbcType=VARCHAR},
      </if>
      <if test="dataId != null">
        data_id = #{dataId,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    WHERE id = #{id,jdbcType=VARCHAR}
  </update>

  <!--根据项目id查询发布中问卷数量-->
  <select id="queryReleaseQuestionnaireCount" parameterType="com.aim.questionnaire.dao.entity.QuestionnaireEntity" resultType="java.lang.Integer">
    SELECT count(*)
    FROM questionnaire_info
    WHERE project_id = #{projectId,jdbcType=VARCHAR}
    AND question_stop = "1"
  </select>

  <!--添加发送问卷方式-->
  <update id="addSendQuestionnaire" parameterType="map">
    UPDATE questionnaire_info
    <set>
      <if test="dataId != null">
        data_id = #{dataId,jdbcType=VARCHAR},
      </if>
      <if test="questionEndContent != null">
        question_end_content = #{questionEndContent,jdbcType=VARCHAR},
      </if>
      <if test="context != null">
        context = #{context,jdbcType=LONGVARCHAR},
      </if>
      <if test="releaseTime != null">
        release_time = #{releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="answerTotal != null">
        answer_total = #{answerTotal,jdbcType=VARCHAR},
      </if>
      <if test="questionStop != null">
        question_stop = #{questionStop,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdatedBy != null">
        last_updated_by = #{lastUpdatedBy,jdbcType=CHAR},
      </if>
      <if test="lastUpdateDate != null">
        last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{questionId,jdbcType=VARCHAR}
  </update>

  <!--查询问卷的发送问卷的人数-->
  <select id="selectSendAnswerCount" parameterType="java.lang.String" resultType="java.lang.Integer">
    select answer_total
    from questionnaire_info
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <!--查询问卷模板-->
  <select id="queryQuestionnaireMould" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT id, question_name as questionName,question_content as questionContent
    FROM questionnaire_info
    WHERE data_id = #{dataId,jdbcType=VARCHAR}
    AND question_stop = "0"
  </select>

  <!--查询历史问卷-->
  <select id="queryHistoryQuestionnaire" parameterType="java.util.Map" resultType="map">
    SELECT id,question_name as questionName,release_time AS releaseTime,answer_total AS answerTotal,question_content as questionContent
    FROM questionnaire_info
    WHERE
    question_stop = "4"
    <if test="projectId != null">
      AND project_id = #{projectId,jdbcType = VARCHAR}
    </if>
    <if test="dataId != null">
      AND data_id = #{dataId,jdbcType = VARCHAR}
    </if>
  </select>

  <!--根据id修改问卷的全部信息-->
  <update id="modifyQuestionnaire" parameterType="map">
    update questionnaire_info
    <set>
      <if test="questionName != null">
        question_name = #{questionName,jdbcType=VARCHAR},
      </if>
      <if test="questionContent != null">
        question_content = #{questionContent,jdbcType=VARCHAR},
      </if>
      <if test="dataId != null">
        data_id = #{dataId,jdbcType=VARCHAR},
      </if>
      <if test="questionTitle != null">
        question_title = #{questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedBy != null">
        last_updated_by = #{lastUpdatedBy,jdbcType=CHAR},
      </if>
      <if test="lastUpdateDate != null">
        last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="questionList != null">
        question = #{questionList,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{questionId,jdbcType=VARCHAR}
  </update>

  <!--修改问卷状态-->
  <update id="modifyQuestionnaireStatus" parameterType="map">
    UPDATE questionnaire_info
    SET question_stop = #{questionStop,jdbcType=VARCHAR}
    <if test="startTime != null">
      ,start_time = #{startTime,jdbcType=VARCHAR}
    </if>
    WHERE id = #{id,jdbcType=VARCHAR}
  </update>

  <!--xxx问卷数量统计-->
  <select id="queryQuestionnaireCount" parameterType="map" resultType="map">
    SELECT que.id,question_name as questionName,que.data_id as dataId,dat.name as dataName
    FROM questionnaire_info que,data_dictionary_info dat
    WHERE que.id = #{questionId,jdbcType=VARCHAR}
    AND que.data_id = dat.id
  </select>
  <!-- add by fuqiang 加入统计有效问卷数量 -->
   <select id="queryeffectQuestionnaireCount" parameterType="map" resultType="map">
      SELECT count(*) as effectcount from (select count(*) from ${tableName} t where t.isValid='1' GROUP BY t.answerId) a
   </select>
   <!-- add by fuqiang 加入统计有效学校问卷数量 -->
     <select id="queryeffectQuestionnaireschoolCount" parameterType="map" resultType="map">
       SELECT 
          ts.answerBelong as answerBelong,
          concat(cast((effectcount/ts.answerTotal) as decimal(18,3))*100,'%') as answerRate,
          ts.effectiveAnswer as effectiveAnswer,
          ts.answerTotal as answerTotal,
          b.effectcount as effectcount
    FROM ${schooltableName} ts 
        left join
	       (select count(*) as effectcount,a.answerBelong as answerBelong from 
	           (select  distinct t.answerId,t.answerBelong from ${answertableName} t where t.isValid='1')a GROUP BY a.answerBelong) b
        on ts.answerBelong =b.answerBelong
         <if test="answerBelong != null">
	      WHERE ts.answerBelong like '%${answerBelong}%'
	    </if>
	    <if test="sortName != null and sortOrder != null">
	      <if test="'answerRate' == sortName">
	        ORDER BY CAST(left(${sortName},LENGTH(${sortName})-1)*100 as DECIMAL) ${sortOrder}
	      </if>
	      <if test="'answerBelong' == sortName">
	        ORDER BY CONVERT(${sortName} USING gbk ) COLLATE gbk_chinese_ci ${sortOrder}
	      </if>
	      <if test="'effectiveAnswer' == sortName or 'answerTotal' == sortName">
	        ORDER BY ${sortName} ${sortOrder}
	      </if>
    </if>
    </select>
    <!-- add by fuqiang 加入统计有问题效问卷数量 -->
     <select id="queryeffectQuestionnairequestionCount" parameterType="map" resultType="map">
       select t.questionNum as questionNum ,count(*) as questioncount from ${tableName} t where t.isValid='1' and t.questionAnswer!='null' GROUP BY t.questionNum; 
    </select>
  <!--根據問卷id查詢問卷的題目-->
  <select id="selectQuestionTitleById" parameterType="java.lang.String" resultType="map">
    SELECT question_title as questionTitle,data_id as dataId
    FROM questionnaire_info
    WHERE id = #{questionId,jdbcType=VARCHAR}
  </select>

  <!--查找所有问卷的截止时间，过期问卷除外-->
  <select id="selectAllQueEndTime" resultType="java.util.Map">
    SELECT id, end_time as endTime
    FROM questionnaire_info
    WHERE question_stop != "0"
    AND question_stop != "5"
    AND question_stop != "4"
  </select>

  <!--查找所有问卷的开始时间，过期问卷除外-->
  <select id="selectAllQueStartTime" resultType="java.util.Map">
    SELECT id, start_time as startTime
    FROM questionnaire_info
    WHERE question_stop = "5"
  </select>

  <!--设置问卷过期-->
  <update id="modifyQuestionnaireStopStatus" parameterType="map">
    UPDATE questionnaire_info
    SET question_stop = #{questionStop,jdbcType=VARCHAR}
    WHERE id=#{id,jdbcType=VARCHAR}
  </update>

  <!--查询问卷题目-->
  <select id="queryQuestionById" resultType="java.lang.String">
    SELECT question
    FROM questionnaire_info
    WHERE id=#{id,jdbcType=VARCHAR}
  </select>

  <select id="queryQuestContextEnd" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT que.id,question_end_content as questionEndContent,que.context as context
    FROM questionnaire_info que
    WHERE que.id = #{questionId,jdbcType=VARCHAR}
  </select>

  <!--查询此人创建的问卷-->
  <select id="queryAllQuestionnaireByCreated" resultType="java.util.Map">
    SELECT id,question_name as questionName
    FROM questionnaire_info que
    WHERE created_by = #{user,jdbcType=VARCHAR}
    AND question_stop != 4
    AND question_stop != 0
  </select>

  <!--根据问卷id查找问卷状态-->
  <select id="queryQuestionnaireStatus" resultType="java.lang.Integer">
    SELECT count(*)
    FROM questionnaire_info que
    WHERE id = #{questionId,jdbcType=VARCHAR}
    AND question_stop = 1
  </select>

  <!--修改发送人状态-->
  <update id="updateSendStudentStatusInfo" parameterType="list">
    UPDATE a_student
    SET status = "1"
    WHERE
    <foreach collection="list" item="item" index="index" separator="or">
      answerPhone = #{item.answerPhone}
    </foreach>
  </update>

  <update id="updateSendGraduateStatusInfo" parameterType="list">
    UPDATE a_gradute
    SET status = "1"
    WHERE
    <foreach collection="list" item="item" index="index" separator="or">
      answerPhone = #{item.answerPhone}
    </foreach>
  </update>

  <update id="updateSendTeacherStatusInfo" parameterType="list">
    UPDATE a_teacher
    SET status = "1"
    WHERE
    <foreach collection="list" item="item" index="index" separator="or">
      answerPhone = #{item.answerPhone}
    </foreach>
  </update>

  <update id="updateSendCompanyStatusInfo" parameterType="list">
    UPDATE a_company
    SET status = "1"
    WHERE
    <foreach collection="list" item="item" index="index" separator="or">
      answerPhone = #{item.answerPhone}
    </foreach>
  </update>

  <select id="querySendStudentPeopleInfo" parameterType="map" resultType="map">
    SELECT id,answerPhone,answerName,answerBelong,answerNum
    FROM a_student
    WHERE status = '0'
    LIMIT 1,#{count}
  </select>
  <select id="querySendGraduatePeopleInfo" parameterType="map" resultType="map">
    SELECT id,answerPhone,answerName,answerBelong,answerNum
    FROM a_graduate
    WHERE status = '0'
    LIMIT 1,#{count}
  </select>
  <select id="querySendTeacherPeopleInfo" parameterType="map" resultType="map">
    SELECT id,answerPhone,answerName,answerBelong,answerNum
    FROM a_teacher
    WHERE status = '0'
    LIMIT 1,#{count}
  </select>
  <select id="querySendCompanyPeopleInfo" parameterType="map" resultType="map">
    SELECT id,answerPhone,answerName,answerBelong
    FROM a_company
    WHERE status = '0'
    LIMIT 1,#{count}
  </select>


  <select id="queryQuestionnaireIsStopStatus" resultType="java.lang.String">
    SELECT question_stop FROM questionnaire_info
    WHERE id = #{questionId, jdbcType = VARCHAR}
  </select>

  <!--查询所有状态为1的问卷-->
  <select id="queryAllQuestionnaire" resultType="java.util.Map">
    select id as questionId, question_name as questionName
    from questionnaire_info
    where question_stop = "1"
  </select>

  <!--批量插入问卷答题详情-->
  <insert id="addQuestionRecordAnswerCount" parameterType="string" >
    insert into ${tableName}
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (
        #{item.answerBelong},#{item.answerName},#{item.questionNum},#{item.questionTitle},#{item.questionAnswer},#{item.dataId},#{item.createDate},#{item.answerTime},#{item.endTime},#{item.longTime},#{item.ipAddress},#{item.answerSource},#{item.isValid},#{item.answerId}
      )
    </foreach>
  </insert>

  <!--批量插入学校答题情况明细-->
  <insert id="addQuestionRecordAnswerSchool" parameterType="string">
    insert into ${tableName}
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (
      #{item.answerBelong},#{item.answerRate},#{item.effectiveAnswer},#{item.answerTotal}
      )
    </foreach>
  </insert>
  <!--添加学校信息-->
  <insert id="addRecordCountSchool" parameterType="map">
    insert into ${tableName}
    VALUES (#{name},"0.00%",0,0)
  </insert>

  <!--数量统计-->
  <select id="queryQuestionRecordCountSchool" resultType="java.util.Map">
    select sum(answerTotal) as answerTotal,sum(effectiveAnswer) as effectiveAnswer
    from ${tableName}
  </select>

  <!--XXX问卷学校答题情况明细-->
  <select id="queryRecordCountSchool" resultType="map">
    SELECT answerBelong,answerRate,effectiveAnswer,answerTotal
    FROM ${tableName}
    <if test="answerBelong != null">
      WHERE answerBelong like '%${answerBelong}%'
    </if>
    <if test="sortName != null and sortOrder != null">
      <if test="'answerRate' == sortName">
        ORDER BY CAST(left(${sortName},LENGTH(${sortName})-1)*100 as DECIMAL) ${sortOrder}
      </if>
      <if test="'answerBelong' == sortName">
        ORDER BY CONVERT(${sortName} USING gbk ) COLLATE gbk_chinese_ci ${sortOrder}
      </if>
      <if test="'effectiveAnswer' == sortName or 'answerTotal' == sortName">
        ORDER BY ${sortName} ${sortOrder}
      </if>
    </if>
  </select>

  <!--XXX问卷答题详情-->
  <select id="queryRecordCountAnswer" resultType="java.util.Map">
    SELECT answerBelong,answerName,questionNum,questionTitle,questionAnswer,dataId,answerTime,endTime,longTime,ipAddress,answerSource,isValid
    FROM ${tableName}
    WHERE 1=1
    <if test="isValid != null">
      and isValid = #{isValid,jdbcType=VARCHAR}
    </if>
    <if test="longTime != null">
      and <![CDATA[longTime+0< #{longTime,jdbcType=VARCHAR}+0]]>
    </if>
    <if test="answerBelong != null">
      and answerBelong like '%${answerBelong}%'
    </if>
  </select>

  <!--查询所有学校-->
  <select id="selectRecordCountSchool" resultType="java.lang.String">
    SELECT answerBelong
    FROM ${tableName}
  </select>

  <!--批量修改数据-->
  <update id="modifyQuestionRecordAnswerSchool" parameterType="string">
    UPDATE ${tableName}
    SET
		effectiveAnswer = CASE answerBelong
        <foreach collection="list" item="item" index="index" separator=" ">
          WHEN #{item.answerBelong} THEN effectiveAnswer + #{item.effectiveAnswer}
        </foreach>
    END,
		answerTotal = CASE answerBelong
        <foreach collection="list" item="item" index="index" separator=" ">
          WHEN #{item.answerBelong} THEN answerTotal + #{item.answerTotal}
        </foreach>
    END,
		answerRate = CASE answerBelong
        <foreach collection="list" item="item" index="index" separator=" ">
            WHEN #{item.answerBelong} THEN CONCAT(ROUND(effectiveAnswer/ answerTotal *100,2),"","%")
        </foreach>
    END
    WHERE answerBelong IN (
    <foreach collection="list" item="item" index="index" separator=",">
      #{item.answerBelong}
    </foreach>
    )
  </update>

  <!--创建表格-->
  <update id="createRecordCountAnswer" parameterType="string">
    CREATE TABLE ${tableName}
    (
    id int(11) not null AUTO_INCREMENT,
    answerBelong varchar(50),
    answerName varchar(50),
    questionNum int(11),
    questionTitle text,
    questionAnswer text,
    dataId varchar(50),
    createDate datetime,
    answerTime varchar(20),
    endTime varchar(20),
    longTime varchar(10),
    ipAddress varchar(20),
    answerSource varchar(10),
    isValid	varchar(2),
    answerId varchar(50),
    primary key(id)
    )
  </update>

  <!--创建表格-->
  <update id="createRecordCountSchool" parameterType="string">
    CREATE TABLE ${tableName}
    (
    id int(11) not null AUTO_INCREMENT,
    answerBelong varchar(50),
    answerRate varchar(10),
    effectiveAnswer int(11),
    answerTotal int(11),
    primary key(id)
    )
  </update>

  <!--创建表格-->
  <update id="newQuestionnaireSendTable" parameterType="string">
    CREATE TABLE `${tableName}`
    (
    answerPhone varchar(11) primary key
    )
  </update>

  <!--修改答题人为0的统计-->
  <update id="modifyAnswerRateNull" parameterType="string">
    UPDATE ${tableNameAnswer}
    SET answerRate = "0.00%"
    WHERE effectiveAnswer = 0
  </update>

  <!--修改答题人答题是否有效状态-->
  <update id="modifyAnswerIsValid" parameterType="map">
    update ${tableNameAnswer}
    set isValid = #{isValid,jdbcType=VARCHAR}
    where <![CDATA[longTime+0 < #{longTime,jdbcType=VARCHAR}+0]]>
  </update>
  <!--修改答题人答题全部为有效状态-->
  <update id="modifyAnswerIsValidNot" parameterType="map">
    update ${tableNameAnswer}
    set isValid = #{isValid,jdbcType=VARCHAR}
  </update>

  <!--修改问卷的创建人和修改人根据用户名-->
  <update id="modifyQuestionCreadBy" parameterType="map">
    update project_info pro,questionnaire_info que
    set pro.created_by = #{username,jdbcType=VARCHAR},pro.last_updated_by = #{username,jdbcType=VARCHAR},
    que.created_by = #{username,jdbcType=VARCHAR},que.last_updated_by = #{username,jdbcType=VARCHAR}
    WHERE (pro.created_by = #{username,jdbcType=VARCHAR}
    and pro.id = que.project_id)
    or que.created_by = #{username,jdbcType=VARCHAR}
  </update>

  <!--刪除表格-->
  <delete id="deleteTableByTableName" parameterType="string">
    drop table if exists ${tableNameAnswer},${tableNameSchool},${questionId}
  </delete>
<select id="selectByName" parameterType="java.lang.String" resultType="java.lang.Integer">
  select
  COUNT(*)
  from questionnaire_info
  where question_name = #{questionName,jdbcType=VARCHAR}
  and question_stop != 0
</select>
  <select id="selectByNameId" parameterType="java.lang.String" resultType="java.lang.Integer">
  select
  COUNT(*)
  from questionnaire_info
  where question_name = #{questionName,jdbcType=VARCHAR}
  and question_stop != 0
  and id != #{id}
</select>
</mapper>