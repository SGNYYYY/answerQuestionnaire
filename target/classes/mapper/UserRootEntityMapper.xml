<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aim.questionnaire.dao.UserRootEntityMapper">
  <resultMap id="BaseResultMap" type="com.aim.questionnaire.dao.entity.UserRootEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="created_by" jdbcType="CHAR" property="createdBy" />
    <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate" />
    <result column="last_updated_by" jdbcType="CHAR" property="lastUpdatedBy" />
    <result column="last_update_date" jdbcType="TIMESTAMP" property="lastUpdateDate" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, role, role_code, status, created_by, creation_date, last_updated_by, last_update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from user_root_info
    where id = #{id,jdbcType=VARCHAR}
  </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user_root_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <!--删除角色-->
  <delete id="deleteRoleInfo" parameterType="map">
    delete from user_root_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <delete id="deletePermission" parameterType="map">
    delete from root_permission_info
    where role_id = #{id,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.aim.questionnaire.dao.entity.UserRootEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user_root_info (id, role, role_code, 
      status, created_by, creation_date, 
      last_updated_by, last_update_date)
    values (#{id,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{createdBy,jdbcType=CHAR}, #{creationDate,jdbcType=TIMESTAMP}, 
      #{lastUpdatedBy,jdbcType=CHAR}, #{lastUpdateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.aim.questionnaire.dao.entity.UserRootEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user_root_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="roleCode != null">
        role_code,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="creationDate != null">
        creation_date,
      </if>
      <if test="lastUpdatedBy != null">
        last_updated_by,
      </if>
      <if test="lastUpdateDate != null">
        last_update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null">
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=CHAR},
      </if>
      <if test="creationDate != null">
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedBy != null">
        #{lastUpdatedBy,jdbcType=CHAR},
      </if>
      <if test="lastUpdateDate != null">
        #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.aim.questionnaire.dao.entity.UserRootEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_root_info
    <set>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null">
        role_code = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=CHAR},
      </if>
      <if test="creationDate != null">
        creation_date = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedBy != null">
        last_updated_by = #{lastUpdatedBy,jdbcType=CHAR},
      </if>
      <if test="lastUpdateDate != null">
        last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aim.questionnaire.dao.entity.UserRootEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_root_info
    set role = #{role,jdbcType=VARCHAR},
      role_code = #{roleCode,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=CHAR},
      creation_date = #{creationDate,jdbcType=TIMESTAMP},
      last_updated_by = #{lastUpdatedBy,jdbcType=CHAR},
      last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <!--角色查询-->
  <select id="queryRoleInfo" resultType="java.util.Map">
    SELECT id,role
    FROM user_root_info
    WHERE status = "1"
  </select>

  <!--添加角色-->
  <insert id="addRoleInfo" parameterType="map">
    insert into user_root_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="roleCode != null">
        role_code,
      </if>
        status,
        created_by,
      <if test="creationDate != null">
        creation_date,
      </if>
      <if test="lastUpdatedBy != null">
        last_updated_by,
      </if>
      <if test="lastUpdateDate != null">
        last_update_date,
      </if>
        model_id
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null">
        #{roleCode,jdbcType=VARCHAR},
      </if>
        1,
        0,
      <if test="creationDate != null">
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdatedBy != null">
        #{lastUpdatedBy,jdbcType=CHAR},
      </if>
      <if test="lastUpdateDate != null">
        #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
      ","
    </trim>
  </insert>

  <!--角色状态-->
  <update id="modifyRoleStatus" parameterType="map">
    UPDATE user_root_info
    SET status = #{status,jdbcType=VARCHAR}
    WHERE id = #{roleId,jdbcType=VARCHAR}
  </update>

  <!--为角色添加权限list-->
  <update id="modifyRolePermissionList" parameterType="map">
    UPDATE user_root_info
    SET created_by = #{str,jdbcType=VARCHAR}
    WHERE id = #{roleId,jdbcType=VARCHAR}
  </update>
  <!--修改角色信息-->
  <update id="modifyRoleInfo" parameterType="map">
    update user_root_info
    <set>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null">
        role_code = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="modelId != null">
        model_id = #{modelId,jdbcType=VARCHAR},
      </if>
    </set>
    WHERE id = #{id,jdbcType=VARCHAR}
  </update>
  <!--更新admin的list数值-->
  <update id="modifyRoleParamList" parameterType="string">
    update user_root_info
    set created_by = #{createdBy,jdbcType=VARCHAR}
    WHERE id = "1"
  </update>

  <!--批量修改createdBy数据-->
  <update id="modifyRolePermissionListById" parameterType="map">
    update user_root_info
    set
    <if test="createdBy != null">
      created_by = #{createdBy,jdbcType=VARCHAR},
    </if>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <!--修改modelId在原基础上-->
  <update id="modifyRoleInfoByModel" parameterType="map">
    UPDATE user_root_info
    set model_id = concat(model_id,"",#{modelId,jdbcType=VARCHAR})
    WHERE id = #{id,jdbcType=VARCHAR}
  </update>

  <!--修改modelId-->
  <update id="modifyModelIdById" parameterType="map">
    update user_root_info
    set
    model_id = REPLACE(model_id,substring_index(model_id, ',', find_in_set(#{modelId}, model_id)),substring_index(model_id, ',', find_in_set(#{modelId}, model_id)-1))
    where find_in_set(#{modelId}, model_id) > 0
  </update>

  <!--查询全部角色信息-->
  <select id="queryAllRoleInfo" parameterType="map" resultType="map">
    SELECT id,role,role_code as roleCode,creation_date as creationDate,status,last_updated_by as lastUpdatedBy, model_id as modelId
    FROM user_root_info
    <where>
      <if test="role != null">
        role LIKE '%${role}%'
      </if>
    </where>
  </select>

  <!--获取用户角色-->
  <select id="findRoleById" parameterType="java.lang.String" resultType="com.aim.questionnaire.dao.entity.UserRootEntity">
    SELECT id,role
    FROM user_root_info
    WHERE status = "1"
    AND id = #{id,jdbcType=VARCHAR}
  </select>

  <!--获取用户角色-->
  <select id="findRoleInfoById" parameterType="java.lang.String" resultType="java.lang.String">
    SELECT role
    FROM user_root_info
    WHERE status = "1"
    AND id = #{id,jdbcType=VARCHAR}
  </select>

  <!--根据角色查询等级-->
  <select id="queryRoleNumInfo" parameterType="java.lang.String" resultType="map">
    SELECT last_updated_by as num, role, role_code as roleCode, model_id as modelId
    FROM user_root_info
    WHERE status = "1"
    AND id = #{id,jdbcType=VARCHAR}
  </select>

  <!--查询在此角色等级下的角色-->
  <select id="queryAllRoleInfoByNum" resultType="java.lang.String">
    SELECT role_code
    FROM user_root_info
    WHERE status = "1"
    AND last_updated_by > #{lastUpdatedBy,jdbcType=CHAR}
  </select>

  <!--查找所有的角色的等级-->
  <select id="queryRoleNumAll" resultType="java.lang.String">
    SELECT last_updated_by
    FROM user_root_info
    ORDER BY last_updated_by ASC
  </select>

  <!--查询角色的权限list-->
  <select id="queryRolePermissionList" resultType="java.lang.String">
    SELECT created_by
    FROM user_root_info
    WHERE id = #{id,jdbcType=VARCHAR}
    AND status = "1"
  </select>

  <!--根据角色的code查找角色code是否存在-->
  <select id="queryRoleNameIsExit" resultType="java.lang.Integer">
    select count(1)
    from user_root_info
    where role_code = #{roleCode,jdbcType=VARCHAR}
    <if test="id != null">
      and id != #{id,jdbcType=VARCHAR}
    </if>
  </select>

  <!--查询所有包含permission的角色-->
  <select id="queryAllRolePermissionList" resultType="java.util.Map">
    select created_by as createdBy, id, model_id as modelId
    from user_root_info
    where created_by like '%${status}%'
  </select>
</mapper>